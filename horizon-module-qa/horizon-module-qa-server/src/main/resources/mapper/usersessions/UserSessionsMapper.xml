<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.horizon.module.qa.dal.mapper.usersessions.UserSessionsMapper">

    <!-- ================= ResultMap ================= -->
    <resultMap id="UserSessionsResultMap" type="org.horizon.module.qa.dal.dataobject.usersessions.UserSessionsDO">
        <id     property="id"            column="id"/>
        <result property="tenantId"      column="tenant_id"/>
        <result property="userId"        column="user_id"/>
        <result property="anonUserId"    column="anon_user_id"/>     <!-- 新增 -->
        <result property="sessionToken"  column="session_token"/>
        <result property="tokenUsed"     column="token_used"/>
        <result property="lastActivity"  column="last_activity"/>
        <result property="startTime"     column="start_time"/>
        <result property="endTime"       column="end_time"/>
        <result property="status"        column="status"/>

        <!-- BaseDO 审计字段 -->
        <result property="creator"       column="creator"/>
        <result property="createTime"    column="create_time"/>
        <result property="updater"       column="updater"/>
        <result property="updateTime"    column="update_time"/>
        <result property="deleted"       column="deleted"/>
    </resultMap>

    <!-- ================= 公共列清单 ================= -->
    <sql id="Base_Column_List">
        id, tenant_id, user_id, anon_user_id, session_token, token_used,
        last_activity, start_time, end_time, status,
        creator, create_time, updater, update_time, deleted
    </sql>

    <!-- ================= Insert（动态列；字符串→UUID 显式转换） ================= -->
    <insert id="insert"
            parameterType="org.horizon.module.qa.dal.dataobject.usersessions.UserSessionsDO"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO qa_user_sessions
        <trim prefix="(" suffix=")" suffixOverrides=",">
            tenant_id,
            <if test="userId != null">user_id,</if>
            <if test="anonUserId != null and anonUserId != ''">anon_user_id,</if>
            <!-- 只有在传入时才写 session_token；否则让 DEFAULT gen_random_uuid() 生效 -->
            <if test="sessionToken != null and sessionToken != ''">session_token,</if>
            <if test="tokenUsed != null">token_used,</if>
            <if test="lastActivity != null">last_activity,</if>
            <if test="startTime != null">start_time,</if>
            <if test="endTime != null">end_time,</if>
            <if test="status != null and status != ''">status,</if>
            creator, create_time, updater, update_time, deleted
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            #{tenantId},
            <if test="userId != null">#{userId},</if>
            <if test="anonUserId != null and anonUserId != ''">CAST(#{anonUserId} AS uuid),</if>
            <if test="sessionToken != null and sessionToken != ''">CAST(#{sessionToken} AS uuid),</if>
            <if test="tokenUsed != null">#{tokenUsed},</if>
            <if test="lastActivity != null">#{lastActivity},</if>
            <if test="startTime != null">#{startTime},</if>
            <if test="endTime != null">#{endTime},</if>
            <if test="status != null and status != ''">#{status},</if>
            #{creator}, NOW(), #{updater}, NOW(), #{deleted}
        </trim>
    </insert>

    <!-- ================= Update ================= -->
    <update id="updateById" parameterType="org.horizon.module.qa.dal.dataobject.usersessions.UserSessionsDO">
        UPDATE qa_user_sessions
        <set>
            <if test="tenantId != null">tenant_id = #{tenantId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="anonUserId != null and anonUserId != ''">anon_user_id = CAST(#{anonUserId} AS uuid),</if>
            <if test="sessionToken != null and sessionToken != ''">session_token = CAST(#{sessionToken} AS uuid),</if>
            <if test="tokenUsed != null">token_used = #{tokenUsed},</if>
            <if test="lastActivity != null">last_activity = #{lastActivity},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updater != null">updater = #{updater},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <!-- ================= Delete ================= -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM qa_user_sessions WHERE id = #{id}
    </delete>

    <delete id="deleteByIds" parameterType="list">
        DELETE FROM qa_user_sessions
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- ================= Select ================= -->
    <select id="selectById" parameterType="long" resultMap="UserSessionsResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM qa_user_sessions
        WHERE id = #{id}
    </select>

    <!-- ================= WHERE 片段（字符串→UUID 显式转换） ================= -->
    <sql id="Where_Clause">
        <where>
            <if test="tenantId != null">
                AND tenant_id = #{tenantId}
            </if>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="anonUserId != null and anonUserId != ''">
                AND anon_user_id = CAST(#{anonUserId} AS uuid)
            </if>
            <if test="sessionToken != null and sessionToken != ''">
                AND session_token = CAST(#{sessionToken} AS uuid)
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>

            <!-- tokenUsed 范围 -->
            <if test="minTokenUsed != null">
                AND token_used &gt;= #{minTokenUsed}
            </if>
            <if test="maxTokenUsed != null">
                AND token_used &lt;= #{maxTokenUsed}
            </if>

            <!-- 时间范围 -->
            <if test="beginStartTime != null">
                AND start_time &gt;= #{beginStartTime}
            </if>
            <if test="endStartTime != null">
                AND start_time &lt;= #{endStartTime}
            </if>
            <if test="beginLastActivity != null">
                AND last_activity &gt;= #{beginLastActivity}
            </if>
            <if test="endLastActivity != null">
                AND last_activity &lt;= #{endLastActivity}
            </if>

            <!-- 逻辑删除 -->
            <if test="deleted != null">
                AND deleted = #{deleted}
            </if>
        </where>
    </sql>

    <!-- ================= 根据 anon_user_id 查询会话 ================= -->
    <select id="selectByAnonUserId"
            parameterType="string"
            resultMap="UserSessionsResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM qa_user_sessions
        WHERE anon_user_id = CAST(#{anonUserId} AS uuid)
        AND deleted = FALSE
        LIMIT 1
    </select>

    <!-- ================= 分页查询 ================= -->
    <select id="selectPageList"
            parameterType="org.horizon.module.qa.controller.admin.usersessions.vo.UserSessionsPageReqVO"
            resultMap="UserSessionsResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM qa_user_sessions
        <include refid="Where_Clause"/>
        ORDER BY id DESC
        LIMIT #{pageSize} OFFSET #{(pageNo - 1) * pageSize}
    </select>

    <!-- ================= 分页总数 ================= -->
    <select id="selectPageCount"
            parameterType="org.horizon.module.qa.controller.admin.usersessions.vo.UserSessionsPageReqVO"
            resultType="long">
        SELECT COUNT(1)
        FROM qa_user_sessions
        <include refid="Where_Clause"/>
    </select>

</mapper>